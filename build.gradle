buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '1.16.5-4.2.2'
group = 'com.blakebr0.mysticalagradditions'
archivesBaseName = 'MysticalAgradditions'

java.toolchain.languageVersion = JavaLanguageVersion.of(16)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

repositories {
    maven { url 'https://dvs1.progwml6.com/files/maven/' }
    maven { url 'https://maven.blamejared.com' }
    maven {
        url 'https://cursemaven.com'
        content {
            includeGroup 'curse.maven'
        }
    }
}

minecraft {
    mappings channel: 'official', version: '1.17.1'

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            evaluationDependsOn(':MysticalAgriculture')

            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            ideaModule "${rootProject.name}.${project.name}.main"

            mods {
                mysticalagradditions {
                    source sourceSets.main
                }

                cucumber {
                    source project(':Cucumber').sourceSets.main
                }

                mysticalagriculture {
                    source project(':MysticalAgriculture').sourceSets.main
                }
            }
        }

        server {
            evaluationDependsOn(':MysticalAgriculture')

            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            ideaModule "${rootProject.name}.${project.name}.main"

            mods {
                mysticalagradditions {
                    source sourceSets.main
                }

                cucumber {
                    source project(':Cucumber').sourceSets.main
                }

                mysticalagriculture {
                    source project(':MysticalAgriculture').sourceSets.main
                }
            }
        }
    }
}

//dependencies {
//    minecraft 'net.minecraftforge:forge:1.16.5-36.1.1'
//
//    compileOnly fg.deobf('vazkii.patchouli:Patchouli:1.16.2-47')
//
//    compileOnly fg.deobf('slimeknights.tconstruct:TConstruct:1.16.5-3.1.0.231')
//    compileOnly fg.deobf('slimeknights.mantle:Mantle:1.16.5-1.6.114')
//}

dependencies {
    minecraft 'net.minecraftforge:forge:1.17.1-37.0.103'

    implementation project(':Cucumber')
    implementation project(':MysticalAgriculture')
    implementation fg.deobf('curse.maven:jade-324717:3447700')

    runtimeOnly fg.deobf('mezz.jei:jei-1.17.1:8.0.0.14')

    compileOnly 'mezz.jei:jei-1.17.1:8.0.0.14:api'
}

jar {
    manifest {
        attributes([
            "Specification-Title": "Mystical Agradditions",
            "Specification-Vendor": "BlakeBr0",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version.split('-').last()}",
            "Implementation-Vendor": "BlakeBr0",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        maven(MavenPublication) {
            artifact jar
        }
    }

    repositories {
        maven {
            url = 'https://maven.blakesmods.com'

            credentials {
                username = System.getenv('BLAKESMODS_MAVEN_USERNAME')
                password = System.getenv('BLAKESMODS_MAVEN_PASSWORD')
            }

            authentication {
                basic(BasicAuthentication)
            }
        }
    }
}